!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var o in n)("object"==typeof exports?exports:t)[o]=n[o]}}(self,(function(){return(()=>{"use strict";var t={};return(()=>{var e=t;e.__esModule=!0,e.WatchSticky=void 0;var n=function(){function t(t,e,n,o){var i,s=this;this._isIntersecting=!1;var r=t.parentElement,c=null!==(i=parseFloat(window.getComputedStyle(t).top))&&void 0!==i?i:0,p=t.getBoundingClientRect().height,d=document.createElement("div");d.style.cssText="position: relative;top: -".concat(c,"px;"),d.classList.add("_sticky_top"),r.insertBefore(d,t);var l=document.createElement("div");l.style.cssText="position: relative;top: ".concat(-c-p,"px;"),l.classList.add("_sticky_bottom"),r.appendChild(l),this.topOb=new IntersectionObserver((function(t){var e=t[0],i=e.isIntersecting,r=e.boundingClientRect,c=e.rootBounds;!i&&r.top<c.top&&(s._isIntersecting||(s._isIntersecting=!0,null==n||n())),i&&r.top>c.top&&s._isIntersecting&&(s._isIntersecting=!1,null==o||o())}),{threshold:0,root:e}),this.topOb.observe(d),this.bottomOb=new IntersectionObserver((function(t){var e=t[0],i=e.isIntersecting,r=e.boundingClientRect,c=e.rootBounds;!i&&r.top<c.top&&s._isIntersecting&&(s._isIntersecting=!1,o()),i&&r.top>c.top&&(s._isIntersecting||(s._isIntersecting=!0,n()))}),{threshold:0,root:e}),this.bottomOb.observe(l)}return t.prototype.disconnect=function(){this.topOb.disconnect(),this.bottomOb.disconnect()},t}();e.WatchSticky=n,e.default=n})(),t})()}));